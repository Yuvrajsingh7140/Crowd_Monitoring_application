# === Crowd Monitoring System Configuration ===

# Server Configuration
server.port=8080
server.servlet.context-path=/
management.endpoints.web.exposure.include=health,info,metrics

# Database Configuration (H2 for Development)
spring.datasource.url=jdbc:h2:mem:crowd_monitoring_db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true

# SQL Initialization
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:data.sql

# Jackson JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Logging Configuration
logging.level.com.example.crowdmonitoring=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Application Info
info.app.name=Crowd Monitoring System
info.app.description=Stampede Avoidance and Safety Management
info.app.version=1.0.0
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Custom Application Properties
crowd-monitoring.alert.email.enabled=false
crowd-monitoring.alert.sms.enabled=false
crowd-monitoring.websocket.enabled=true
crowd-monitoring.auto-alerts.enabled=true